/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   file-reader.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement} from 'lit-element';

declare namespace LogicElements {

  /**
   * `file-reader`
   *
   * `file-reader` is an element for read files in a web browser.
   *
   * The file can be any sub-class of Blob class. That mean it can read Blobs, File objects etc.
   * The `file reader` element don't have it's own UI. It's only a helper element to us in your app's logic.
   *
   * Example:
   *
   * ```html
   * <file-reader
   *  .blob="${this.myFile}"
   *  readAs="dataURL"
   */
  class FileReaderComponent extends LitElement {
    readonly loaded: Boolean|null;
    _loaded: any;
    readonly loading: Boolean|null;
    _loading: any;
    readonly error: Boolean|null;
    _error: any;

    /**
     * This is set only if the browser is able to determine length of the file.
     * The value is in range from 0 to 1.
     */
    readonly progress: Number|null;
    _progress: any;

    /**
     * Sets how the input data should be read.
     * Result format depends on this setting.
     * Possible values are: `array-buffer`, `data-url`, `text`.
     */
    readAs: string|null|undefined;

    /**
     * A Blob to read. File object (the one you can get from the `<input type="file">`)
     * is a sub type of Blob.
     */
    blob: Blob|null;

    /**
     * Automatically read file after setting up `blob` attribute.
     * If the value of this attribute is `false` you need to call `read()` manually.
     */
    auto: boolean|null|undefined;
    onprogress: Function|null;
    onerror: Function|null;
    onloading: Function|null;
    onloaded: Function|null;
    onread: Function|null;
    onabort: Function|null;

    /**
     * A file encoding. Used when reading file as text.
     * If not provided UTF-8 will be assumed.
     */
    encoding: string|null|undefined;

    /**
     * Current reader.
     */
    _reader: FileReader|null|undefined;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Registers an event handler for given type
     *
     * @param eventType Event type (name)
     * @param value The handler to register
     */
    _registerCallback(eventType: String|null, value: Function|null): void;

    /**
     * Supports auto read function.
     * Called when one of `auto`, `blob` or `readAs` change and when all of them are set.
     */
    _autoChanged(): void;

    /**
     * Read the blob.
     */
    read(): void;

    /**
     * Performs a read operation.
     */
    _read(): void;

    /**
     * Error event handler
     */
    _readError(): void;

    /**
     * Load event handler
     */
    _readResult(e: Event|null): void;

    /**
     * Abort event handler
     */
    _readAbort(): void;

    /**
     * Progress event handler.
     */
    _readProgress(e: Event|null): void;

    /**
     * Aborts current operation.
     * If the reader is not working this method do nothing.
     * Note that the `file-abort` event is fired when this method is called.
     */
    abort(): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "file-reader": LogicElements.FileReaderComponent;
  }
}
